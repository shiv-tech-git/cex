#!/bin/bash

export CEX_ROOT="$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )"
cd $CEX_ROOT

__cat=n
__args=""
__cmd=""

function run_cmd
{
    local cmd=$1

    if [ ${cmd:0:1} == '"' ]; then
        cmd=$(echo "$cmd" | sed -e 's/^"//' -e 's/"$//')
    fi

    if [ "${__cat}" == "y" ];
    then
    
        if [ ! -f "$cmd" ]
        then
            cex_print_error "-c or --cat options are only used for commands that call scripts"
            exit 1
        fi
        
        content="$(cat $cmd)"
        echo "$content" | envsubst
        exit 0
    fi

    echo -e "$cmd $__args \n"
    exec $(eval echo "$cmd $__args")
    exit 0
}

function find_cmd
{
    while read n c
    do
        if [ -z "$n" ]; then
            continue
        fi

        if [ "$n" == "$__cmd" ] ; then
            echo "$c"
            break
        fi
    done <<< "$(cat $1 | sed 's/#.*$//')" # remove all comments
}

function process_cmd_list
{
    local commands_file="$1"
    pushd $(dirname $commands_file) > /dev/null

    job=$(find_cmd $commands_file)
    if [ ! -z "$job" ]; then
        run_cmd "$job"
    fi

    popd > /dev/null
}

function preload_from_dir
{
    set -a
    for pre in $1/* ; do
        . $pre
    done
    set +a
}

function process_args
{
    while true
    do
        if [ "$1" == "-d" ] || [ "$1" == "--debug" ]
        then
            export CEX_ENABLE_DEBUG=y
            shift
            continue
        elif [ "$1" == "-c" ] || [ "$1" == "--cat" ]
        then
            __cat=y
            shift
            continue
        fi

        break
    done

    __cmd=$1
    shift
    __args="$@"
}

preload_from_dir ${CEX_ROOT}/preload
process_args $@
process_cmd_list ${CEX_ROOT}/commands

cex_check_var CEX_APP_ROOT
preload_from_dir ${CEX_APP_ROOT}/preload
process_cmd_list ${CEX_APP_ROOT}/commands

cex_print_error "invalid cmd: $cmd
run: $CEX_APP_NAME --help"